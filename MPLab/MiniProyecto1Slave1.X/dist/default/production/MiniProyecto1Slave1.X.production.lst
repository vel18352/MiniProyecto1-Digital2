

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Feb 22 20:40:34 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	intentry,global,class=CODE,delta=2
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    15                           	dabs	1,0x7E,2
    16  0000                     
    17                           ; Version 2.20
    18                           ; Generated 12/02/2020 GMT
    19                           ; 
    20                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC16F887 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     	;# 
    52  0001                     	;# 
    53  0002                     	;# 
    54  0003                     	;# 
    55  0004                     	;# 
    56  0005                     	;# 
    57  0006                     	;# 
    58  0007                     	;# 
    59  0008                     	;# 
    60  0009                     	;# 
    61  000A                     	;# 
    62  000B                     	;# 
    63  000C                     	;# 
    64  000D                     	;# 
    65  000E                     	;# 
    66  000E                     	;# 
    67  000F                     	;# 
    68  0010                     	;# 
    69  0011                     	;# 
    70  0012                     	;# 
    71  0013                     	;# 
    72  0014                     	;# 
    73  0015                     	;# 
    74  0015                     	;# 
    75  0016                     	;# 
    76  0017                     	;# 
    77  0018                     	;# 
    78  0019                     	;# 
    79  001A                     	;# 
    80  001B                     	;# 
    81  001B                     	;# 
    82  001C                     	;# 
    83  001D                     	;# 
    84  001E                     	;# 
    85  001F                     	;# 
    86  0081                     	;# 
    87  0085                     	;# 
    88  0086                     	;# 
    89  0087                     	;# 
    90  0088                     	;# 
    91  0089                     	;# 
    92  008C                     	;# 
    93  008D                     	;# 
    94  008E                     	;# 
    95  008F                     	;# 
    96  0090                     	;# 
    97  0091                     	;# 
    98  0092                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0093                     	;# 
   102  0094                     	;# 
   103  0095                     	;# 
   104  0096                     	;# 
   105  0097                     	;# 
   106  0098                     	;# 
   107  0099                     	;# 
   108  009A                     	;# 
   109  009B                     	;# 
   110  009C                     	;# 
   111  009D                     	;# 
   112  009E                     	;# 
   113  009F                     	;# 
   114  0105                     	;# 
   115  0107                     	;# 
   116  0108                     	;# 
   117  0109                     	;# 
   118  010C                     	;# 
   119  010C                     	;# 
   120  010D                     	;# 
   121  010E                     	;# 
   122  010F                     	;# 
   123  0185                     	;# 
   124  0187                     	;# 
   125  0188                     	;# 
   126  0189                     	;# 
   127  018C                     	;# 
   128  018D                     	;# 
   129  0000                     	;# 
   130  0001                     	;# 
   131  0002                     	;# 
   132  0003                     	;# 
   133  0004                     	;# 
   134  0005                     	;# 
   135  0006                     	;# 
   136  0007                     	;# 
   137  0008                     	;# 
   138  0009                     	;# 
   139  000A                     	;# 
   140  000B                     	;# 
   141  000C                     	;# 
   142  000D                     	;# 
   143  000E                     	;# 
   144  000E                     	;# 
   145  000F                     	;# 
   146  0010                     	;# 
   147  0011                     	;# 
   148  0012                     	;# 
   149  0013                     	;# 
   150  0014                     	;# 
   151  0015                     	;# 
   152  0015                     	;# 
   153  0016                     	;# 
   154  0017                     	;# 
   155  0018                     	;# 
   156  0019                     	;# 
   157  001A                     	;# 
   158  001B                     	;# 
   159  001B                     	;# 
   160  001C                     	;# 
   161  001D                     	;# 
   162  001E                     	;# 
   163  001F                     	;# 
   164  0081                     	;# 
   165  0085                     	;# 
   166  0086                     	;# 
   167  0087                     	;# 
   168  0088                     	;# 
   169  0089                     	;# 
   170  008C                     	;# 
   171  008D                     	;# 
   172  008E                     	;# 
   173  008F                     	;# 
   174  0090                     	;# 
   175  0091                     	;# 
   176  0092                     	;# 
   177  0093                     	;# 
   178  0093                     	;# 
   179  0093                     	;# 
   180  0094                     	;# 
   181  0095                     	;# 
   182  0096                     	;# 
   183  0097                     	;# 
   184  0098                     	;# 
   185  0099                     	;# 
   186  009A                     	;# 
   187  009B                     	;# 
   188  009C                     	;# 
   189  009D                     	;# 
   190  009E                     	;# 
   191  009F                     	;# 
   192  0105                     	;# 
   193  0107                     	;# 
   194  0108                     	;# 
   195  0109                     	;# 
   196  010C                     	;# 
   197  010C                     	;# 
   198  010D                     	;# 
   199  010E                     	;# 
   200  010F                     	;# 
   201  0185                     	;# 
   202  0187                     	;# 
   203  0188                     	;# 
   204  0189                     	;# 
   205  018C                     	;# 
   206  018D                     	;# 
   207  0000                     	;# 
   208  0001                     	;# 
   209  0002                     	;# 
   210  0003                     	;# 
   211  0004                     	;# 
   212  0005                     	;# 
   213  0006                     	;# 
   214  0007                     	;# 
   215  0008                     	;# 
   216  0009                     	;# 
   217  000A                     	;# 
   218  000B                     	;# 
   219  000C                     	;# 
   220  000D                     	;# 
   221  000E                     	;# 
   222  000E                     	;# 
   223  000F                     	;# 
   224  0010                     	;# 
   225  0011                     	;# 
   226  0012                     	;# 
   227  0013                     	;# 
   228  0014                     	;# 
   229  0015                     	;# 
   230  0015                     	;# 
   231  0016                     	;# 
   232  0017                     	;# 
   233  0018                     	;# 
   234  0019                     	;# 
   235  001A                     	;# 
   236  001B                     	;# 
   237  001B                     	;# 
   238  001C                     	;# 
   239  001D                     	;# 
   240  001E                     	;# 
   241  001F                     	;# 
   242  0081                     	;# 
   243  0085                     	;# 
   244  0086                     	;# 
   245  0087                     	;# 
   246  0088                     	;# 
   247  0089                     	;# 
   248  008C                     	;# 
   249  008D                     	;# 
   250  008E                     	;# 
   251  008F                     	;# 
   252  0090                     	;# 
   253  0091                     	;# 
   254  0092                     	;# 
   255  0093                     	;# 
   256  0093                     	;# 
   257  0093                     	;# 
   258  0094                     	;# 
   259  0095                     	;# 
   260  0096                     	;# 
   261  0097                     	;# 
   262  0098                     	;# 
   263  0099                     	;# 
   264  009A                     	;# 
   265  009B                     	;# 
   266  009C                     	;# 
   267  009D                     	;# 
   268  009E                     	;# 
   269  009F                     	;# 
   270  0105                     	;# 
   271  0107                     	;# 
   272  0108                     	;# 
   273  0109                     	;# 
   274  010C                     	;# 
   275  010C                     	;# 
   276  010D                     	;# 
   277  010E                     	;# 
   278  010F                     	;# 
   279  0185                     	;# 
   280  0187                     	;# 
   281  0188                     	;# 
   282  0189                     	;# 
   283  018C                     	;# 
   284  018D                     	;# 
   285  0014                     _SSPCON	set	20
   286  001F                     _ADCON0bits	set	31
   287  001F                     _ADCON0	set	31
   288  000B                     _INTCONbits	set	11
   289  0006                     _PORTB	set	6
   290  0005                     _PORTA	set	5
   291  0013                     _SSPBUF	set	19
   292  001E                     _ADRESH	set	30
   293  000C                     _PIR1bits	set	12
   294  0063                     _SSPIF	set	99
   295  0094                     _SSPSTAT	set	148
   296  009F                     _ADCON1bits	set	159
   297  008C                     _PIE1bits	set	140
   298  0087                     _TRISCbits	set	135
   299  0086                     _TRISB	set	134
   300  0085                     _TRISA	set	133
   301  043B                     _TRISC3	set	1083
   302  043D                     _TRISC5	set	1085
   303  0189                     _ANSELH	set	393
   304  0188                     _ANSEL	set	392
   305                           
   306                           	psect	cinit
   307  000F                     start_initialization:	
   308                           ; #config settings
   309                           
   310  000F                     __initialization:
   311                           
   312                           ; Clear objects allocated to COMMON
   313  000F  01F7               	clrf	__pbssCOMMON& (0+127)
   314  0010  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   315  0011                     end_of_initialization:	
   316                           ;End of C runtime variable initialization code
   317                           
   318  0011                     __end_of__initialization:
   319  0011  0183               	clrf	3
   320  0012  120A  118A  2874   	ljmp	_main	;jump to C main() function
   321                           
   322                           	psect	bssCOMMON
   323  0077                     __pbssCOMMON:
   324  0077                     _Test:
   325  0077                     	ds	1
   326  0078                     _Data_ADC:
   327  0078                     	ds	1
   328                           
   329                           	psect	cstackCOMMON
   330  0070                     __pcstackCOMMON:
   331  0070                     ?_config_adc:
   332  0070                     ?_ADC_Read:	
   333                           ; 1 bytes @ 0x0
   334                           
   335  0070                     ?_isr:	
   336                           ; 1 bytes @ 0x0
   337                           
   338  0070                     ??_isr:	
   339                           ; 1 bytes @ 0x0
   340                           
   341  0070                     ?_setup:	
   342                           ; 1 bytes @ 0x0
   343                           
   344  0070                     ?_main:	
   345                           ; 1 bytes @ 0x0
   346                           
   347                           
   348                           ; 1 bytes @ 0x0
   349  0070                     	ds	3
   350  0073                     ??_config_adc:
   351  0073                     ?_spiInit:	
   352                           ; 1 bytes @ 0x3
   353                           
   354  0073                     ??_ADC_Read:	
   355                           ; 1 bytes @ 0x3
   356                           
   357  0073                     spiInit@sDataSample:	
   358                           ; 1 bytes @ 0x3
   359                           
   360                           
   361                           ; 1 bytes @ 0x3
   362  0073                     	ds	1
   363  0074                     spiInit@sClockIdle:
   364                           
   365                           ; 1 bytes @ 0x4
   366  0074                     	ds	1
   367  0075                     spiInit@sTransmitEdge:
   368                           
   369                           ; 1 bytes @ 0x5
   370  0075                     	ds	1
   371  0076                     ??_spiInit:
   372  0076                     spiInit@sType:	
   373                           ; 1 bytes @ 0x6
   374                           
   375                           
   376                           ; 1 bytes @ 0x6
   377  0076                     	ds	1
   378  0077                     ??_setup:
   379  0077                     ??_main:	
   380                           ; 1 bytes @ 0x7
   381                           
   382                           
   383                           	psect	maintext
   384  0074                     __pmaintext:	
   385                           ; 1 bytes @ 0x7
   386 ;;
   387 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   388 ;;
   389 ;; *************** function _main *****************
   390 ;; Defined at:
   391 ;;		line 80 in file "Main.c"
   392 ;; Parameters:    Size  Location     Type
   393 ;;		None
   394 ;; Auto vars:     Size  Location     Type
   395 ;;		None
   396 ;; Return value:  Size  Location     Type
   397 ;;                  1    wreg      void 
   398 ;; Registers used:
   399 ;;		wreg, status,2, status,0, pclath, cstack
   400 ;; Tracked objects:
   401 ;;		On entry : B00/0
   402 ;;		On exit  : 0/0
   403 ;;		Unchanged: 0/0
   404 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   405 ;;      Params:         0       0       0       0       0
   406 ;;      Locals:         0       0       0       0       0
   407 ;;      Temps:          0       0       0       0       0
   408 ;;      Totals:         0       0       0       0       0
   409 ;;Total ram usage:        0 bytes
   410 ;; Hardware stack levels required when called:    3
   411 ;; This function calls:
   412 ;;		_ADC_Read
   413 ;;		_setup
   414 ;; This function is called by:
   415 ;;		Startup code after reset
   416 ;; This function uses a non-reentrant model
   417 ;;
   418                           
   419                           
   420                           ;psect for function _main
   421  0074                     _main:
   422  0074                     l803:	
   423                           ;incstack = 0
   424                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   425                           
   426                           
   427                           ;Main.c: 81:     setup();
   428  0074  120A  118A  2015  120A  118A  	fcall	_setup
   429  0079                     l805:
   430                           
   431                           ;Main.c: 84:         ADC_Read();
   432  0079  120A  118A  2088  120A  118A  	fcall	_ADC_Read
   433                           
   434                           ;Main.c: 85:         SSPBUF = Data_ADC;
   435  007E  0878               	movf	_Data_ADC,w
   436  007F  1283               	bcf	3,5	;RP0=0, select bank0
   437  0080  1303               	bcf	3,6	;RP1=0, select bank0
   438  0081  0093               	movwf	19	;volatile
   439                           
   440                           ;Main.c: 86:         PORTB = Data_ADC;
   441  0082  0878               	movf	_Data_ADC,w
   442  0083  0086               	movwf	6	;volatile
   443  0084  2879               	goto	l805
   444  0085  120A  118A  280C   	ljmp	start
   445  0088                     __end_of_main:
   446                           
   447                           	psect	text1
   448  0015                     __ptext1:	
   449 ;; *************** function _setup *****************
   450 ;; Defined at:
   451 ;;		line 53 in file "Main.c"
   452 ;; Parameters:    Size  Location     Type
   453 ;;		None
   454 ;; Auto vars:     Size  Location     Type
   455 ;;		None
   456 ;; Return value:  Size  Location     Type
   457 ;;                  1    wreg      void 
   458 ;; Registers used:
   459 ;;		wreg, status,2, status,0, pclath, cstack
   460 ;; Tracked objects:
   461 ;;		On entry : 0/0
   462 ;;		On exit  : 0/0
   463 ;;		Unchanged: 0/0
   464 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   465 ;;      Params:         0       0       0       0       0
   466 ;;      Locals:         0       0       0       0       0
   467 ;;      Temps:          0       0       0       0       0
   468 ;;      Totals:         0       0       0       0       0
   469 ;;Total ram usage:        0 bytes
   470 ;; Hardware stack levels used:    1
   471 ;; Hardware stack levels required when called:    2
   472 ;; This function calls:
   473 ;;		_config_adc
   474 ;;		_spiInit
   475 ;; This function is called by:
   476 ;;		_main
   477 ;; This function uses a non-reentrant model
   478 ;;
   479                           
   480                           
   481                           ;psect for function _setup
   482  0015                     _setup:
   483  0015                     l773:	
   484                           ;incstack = 0
   485                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   486                           
   487                           
   488                           ;Main.c: 54:     ANSEL = 0x01;
   489  0015  3001               	movlw	1
   490  0016  1683               	bsf	3,5	;RP0=1, select bank3
   491  0017  1703               	bsf	3,6	;RP1=1, select bank3
   492  0018  0088               	movwf	8	;volatile
   493  0019                     l775:
   494                           
   495                           ;Main.c: 55:     ANSELH = 0x00;
   496  0019  0189               	clrf	9	;volatile
   497  001A                     l777:
   498                           
   499                           ;Main.c: 57:     TRISA = 0x21;
   500  001A  3021               	movlw	33
   501  001B  1683               	bsf	3,5	;RP0=1, select bank1
   502  001C  1303               	bcf	3,6	;RP1=0, select bank1
   503  001D  0085               	movwf	5	;volatile
   504                           
   505                           ;Main.c: 58:     TRISB = 0x00;
   506  001E  0186               	clrf	6	;volatile
   507  001F                     l779:
   508                           
   509                           ;Main.c: 59:     TRISCbits.TRISC3 = 1;
   510  001F  1587               	bsf	7,3	;volatile
   511  0020                     l781:
   512                           
   513                           ;Main.c: 60:     TRISCbits.TRISC4 = 1;
   514  0020  1607               	bsf	7,4	;volatile
   515  0021                     l783:
   516                           
   517                           ;Main.c: 61:     TRISCbits.TRISC5 = 0;
   518  0021  1287               	bcf	7,5	;volatile
   519                           
   520                           ;Main.c: 63:     PORTA = 0x00;
   521  0022  1283               	bcf	3,5	;RP0=0, select bank0
   522  0023  1303               	bcf	3,6	;RP1=0, select bank0
   523  0024  0185               	clrf	5	;volatile
   524                           
   525                           ;Main.c: 64:     PORTB = 0x00;
   526  0025  0186               	clrf	6	;volatile
   527  0026                     l785:
   528                           
   529                           ;Main.c: 66:     config_adc();
   530  0026  120A  118A  209A  120A  118A  	fcall	_config_adc
   531  002B                     l787:
   532                           
   533                           ;Main.c: 68:     spiInit(SPI_SLAVE_SS_EN, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LOW, SP
      +                          I_IDLE_2_ACTIVE);
   534  002B  01F3               	clrf	spiInit@sDataSample
   535  002C  01F4               	clrf	spiInit@sClockIdle
   536  002D  01F5               	clrf	spiInit@sTransmitEdge
   537  002E  3024               	movlw	36
   538  002F  120A  118A  205E  120A  118A  	fcall	_spiInit
   539  0034                     l789:
   540                           
   541                           ;Main.c: 70:     INTCONbits.GIE = 1;
   542  0034  178B               	bsf	11,7	;volatile
   543  0035                     l791:
   544                           
   545                           ;Main.c: 71:     INTCONbits.PEIE = 1;
   546  0035  170B               	bsf	11,6	;volatile
   547  0036                     l793:
   548                           
   549                           ;Main.c: 72:     PIE1bits.ADIE = 1;
   550  0036  1683               	bsf	3,5	;RP0=1, select bank1
   551  0037  1303               	bcf	3,6	;RP1=0, select bank1
   552  0038  170C               	bsf	12,6	;volatile
   553  0039                     l795:
   554                           
   555                           ;Main.c: 73:     PIR1bits.ADIF = 0;
   556  0039  1283               	bcf	3,5	;RP0=0, select bank0
   557  003A  1303               	bcf	3,6	;RP1=0, select bank0
   558  003B  130C               	bcf	12,6	;volatile
   559  003C                     l797:
   560                           
   561                           ;Main.c: 75:     PIE1bits.SSPIE = 1;
   562  003C  1683               	bsf	3,5	;RP0=1, select bank1
   563  003D  1303               	bcf	3,6	;RP1=0, select bank1
   564  003E  158C               	bsf	12,3	;volatile
   565  003F                     l799:
   566                           
   567                           ;Main.c: 76:     PIR1bits.SSPIF = 0;
   568  003F  1283               	bcf	3,5	;RP0=0, select bank0
   569  0040  1303               	bcf	3,6	;RP1=0, select bank0
   570  0041  118C               	bcf	12,3	;volatile
   571  0042                     l52:
   572  0042  0008               	return
   573  0043                     __end_of_setup:
   574                           
   575                           	psect	text2
   576  005E                     __ptext2:	
   577 ;; *************** function _spiInit *****************
   578 ;; Defined at:
   579 ;;		line 12 in file "spi.c"
   580 ;; Parameters:    Size  Location     Type
   581 ;;  sType           1    wreg     enum E1264
   582 ;;  sDataSample     1    3[COMMON] enum E1272
   583 ;;  sClockIdle      1    4[COMMON] enum E1276
   584 ;;  sTransmitEdg    1    5[COMMON] enum E1280
   585 ;; Auto vars:     Size  Location     Type
   586 ;;  sType           1    6[COMMON] enum E1264
   587 ;; Return value:  Size  Location     Type
   588 ;;                  1    wreg      void 
   589 ;; Registers used:
   590 ;;		wreg, status,2, status,0
   591 ;; Tracked objects:
   592 ;;		On entry : 0/0
   593 ;;		On exit  : 0/0
   594 ;;		Unchanged: 0/0
   595 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   596 ;;      Params:         3       0       0       0       0
   597 ;;      Locals:         1       0       0       0       0
   598 ;;      Temps:          0       0       0       0       0
   599 ;;      Totals:         4       0       0       0       0
   600 ;;Total ram usage:        4 bytes
   601 ;; Hardware stack levels used:    1
   602 ;; Hardware stack levels required when called:    1
   603 ;; This function calls:
   604 ;;		Nothing
   605 ;; This function is called by:
   606 ;;		_setup
   607 ;; This function uses a non-reentrant model
   608 ;;
   609                           
   610                           
   611                           ;psect for function _spiInit
   612  005E                     _spiInit:
   613                           
   614                           ;incstack = 0
   615                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   616                           ;spiInit@sType stored from wreg
   617  005E  00F6               	movwf	spiInit@sType
   618  005F                     l763:
   619                           
   620                           ;spi.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);spi.c: 13: {;spi.c: 14:     TRISC5 = 0;
   621  005F  1683               	bsf	3,5	;RP0=1, select bank1
   622  0060  1303               	bcf	3,6	;RP1=0, select bank1
   623  0061  1287               	bcf	7,5	;volatile
   624                           
   625                           ;spi.c: 15:     if(sType & 0b00000100)
   626  0062  1D76               	btfss	spiInit@sType,2
   627  0063  2865               	goto	u51
   628  0064  2866               	goto	u50
   629  0065                     u51:
   630  0065  286A               	goto	l769
   631  0066                     u50:
   632  0066                     l765:
   633                           
   634                           ;spi.c: 16:     {;spi.c: 17:         SSPSTAT = sTransmitEdge;
   635  0066  0875               	movf	spiInit@sTransmitEdge,w
   636  0067  0094               	movwf	20	;volatile
   637  0068                     l767:
   638                           
   639                           ;spi.c: 18:         TRISC3 = 1;
   640  0068  1587               	bsf	7,3	;volatile
   641                           
   642                           ;spi.c: 19:     }
   643  0069  286E               	goto	l165
   644  006A                     l769:
   645                           
   646                           ;spi.c: 21:     {;spi.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
   647  006A  0873               	movf	spiInit@sDataSample,w
   648  006B  0475               	iorwf	spiInit@sTransmitEdge,w
   649  006C  0094               	movwf	20	;volatile
   650  006D                     l771:
   651                           
   652                           ;spi.c: 23:         TRISC3 = 0;
   653  006D  1187               	bcf	7,3	;volatile
   654  006E                     l165:	
   655                           ;spi.c: 24:     }
   656                           
   657                           
   658                           ;spi.c: 26:     SSPCON = sType | sClockIdle;
   659  006E  0876               	movf	spiInit@sType,w
   660  006F  0474               	iorwf	spiInit@sClockIdle,w
   661  0070  1283               	bcf	3,5	;RP0=0, select bank0
   662  0071  1303               	bcf	3,6	;RP1=0, select bank0
   663  0072  0094               	movwf	20	;volatile
   664  0073                     l166:
   665  0073  0008               	return
   666  0074                     __end_of_spiInit:
   667                           
   668                           	psect	text3
   669  009A                     __ptext3:	
   670 ;; *************** function _config_adc *****************
   671 ;; Defined at:
   672 ;;		line 90 in file "Main.c"
   673 ;; Parameters:    Size  Location     Type
   674 ;;		None
   675 ;; Auto vars:     Size  Location     Type
   676 ;;		None
   677 ;; Return value:  Size  Location     Type
   678 ;;                  1    wreg      void 
   679 ;; Registers used:
   680 ;;		wreg
   681 ;; Tracked objects:
   682 ;;		On entry : 0/0
   683 ;;		On exit  : 0/0
   684 ;;		Unchanged: 0/0
   685 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   686 ;;      Params:         0       0       0       0       0
   687 ;;      Locals:         0       0       0       0       0
   688 ;;      Temps:          0       0       0       0       0
   689 ;;      Totals:         0       0       0       0       0
   690 ;;Total ram usage:        0 bytes
   691 ;; Hardware stack levels used:    1
   692 ;; Hardware stack levels required when called:    1
   693 ;; This function calls:
   694 ;;		Nothing
   695 ;; This function is called by:
   696 ;;		_setup
   697 ;; This function uses a non-reentrant model
   698 ;;
   699                           
   700                           
   701                           ;psect for function _config_adc
   702  009A                     _config_adc:
   703  009A                     l693:	
   704                           ;incstack = 0
   705                           ; Regs used in _config_adc: [wreg]
   706                           
   707                           
   708                           ;Main.c: 91:     ADCON0 = 0x41;
   709  009A  3041               	movlw	65
   710  009B  1283               	bcf	3,5	;RP0=0, select bank0
   711  009C  1303               	bcf	3,6	;RP1=0, select bank0
   712  009D  009F               	movwf	31	;volatile
   713  009E                     l695:
   714                           
   715                           ;Main.c: 92:     ADCON1bits.ADFM = 0;
   716  009E  1683               	bsf	3,5	;RP0=1, select bank1
   717  009F  1303               	bcf	3,6	;RP1=0, select bank1
   718  00A0  139F               	bcf	31,7	;volatile
   719  00A1                     l697:
   720                           
   721                           ;Main.c: 93:     ADCON1bits.VCFG0 = 0;
   722  00A1  121F               	bcf	31,4	;volatile
   723  00A2                     l699:
   724                           
   725                           ;Main.c: 94:     ADCON1bits.VCFG1 = 0;
   726  00A2  129F               	bcf	31,5	;volatile
   727  00A3                     l63:
   728  00A3  0008               	return
   729  00A4                     __end_of_config_adc:
   730                           
   731                           	psect	text4
   732  0088                     __ptext4:	
   733 ;; *************** function _ADC_Read *****************
   734 ;; Defined at:
   735 ;;		line 98 in file "Main.c"
   736 ;; Parameters:    Size  Location     Type
   737 ;;		None
   738 ;; Auto vars:     Size  Location     Type
   739 ;;		None
   740 ;; Return value:  Size  Location     Type
   741 ;;                  1    wreg      void 
   742 ;; Registers used:
   743 ;;		None
   744 ;; Tracked objects:
   745 ;;		On entry : 0/0
   746 ;;		On exit  : 0/0
   747 ;;		Unchanged: 0/0
   748 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   749 ;;      Params:         0       0       0       0       0
   750 ;;      Locals:         0       0       0       0       0
   751 ;;      Temps:          0       0       0       0       0
   752 ;;      Totals:         0       0       0       0       0
   753 ;;Total ram usage:        0 bytes
   754 ;; Hardware stack levels used:    1
   755 ;; Hardware stack levels required when called:    1
   756 ;; This function calls:
   757 ;;		Nothing
   758 ;; This function is called by:
   759 ;;		_main
   760 ;; This function uses a non-reentrant model
   761 ;;
   762                           
   763                           
   764                           ;psect for function _ADC_Read
   765  0088                     _ADC_Read:
   766  0088                     l743:	
   767                           ;incstack = 0
   768                           ; Regs used in _ADC_Read: []
   769                           
   770                           
   771                           ;Main.c: 99:     if (ADCON0bits.GO_DONE == 0) {
   772  0088  1283               	bcf	3,5	;RP0=0, select bank0
   773  0089  1303               	bcf	3,6	;RP1=0, select bank0
   774  008A  189F               	btfsc	31,1	;volatile
   775  008B  288D               	goto	u21
   776  008C  288E               	goto	u20
   777  008D                     u21:
   778  008D  2899               	goto	l67
   779  008E                     u20:
   780  008E                     l745:
   781  008E  0000               	nop	;# 
   782  008F  0000               	nop	;# 
   783  0090  0000               	nop	;# 
   784  0091  0000               	nop	;# 
   785  0092  0000               	nop	;# 
   786  0093  0000               	nop	;# 
   787  0094  0000               	nop	;# 
   788  0095  0000               	nop	;# 
   789                           
   790                           ;Main.c: 108:         ADCON0bits.GO_DONE = 1;
   791  0096  1283               	bcf	3,5	;RP0=0, select bank0
   792  0097  1303               	bcf	3,6	;RP1=0, select bank0
   793  0098  149F               	bsf	31,1	;volatile
   794  0099                     l67:
   795  0099  0008               	return
   796  009A                     __end_of_ADC_Read:
   797                           
   798                           	psect	text5
   799  0043                     __ptext5:	
   800 ;; *************** function _isr *****************
   801 ;; Defined at:
   802 ;;		line 39 in file "Main.c"
   803 ;; Parameters:    Size  Location     Type
   804 ;;		None
   805 ;; Auto vars:     Size  Location     Type
   806 ;;		None
   807 ;; Return value:  Size  Location     Type
   808 ;;                  1    wreg      void 
   809 ;; Registers used:
   810 ;;		wreg
   811 ;; Tracked objects:
   812 ;;		On entry : 0/0
   813 ;;		On exit  : 0/0
   814 ;;		Unchanged: 0/0
   815 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   816 ;;      Params:         0       0       0       0       0
   817 ;;      Locals:         0       0       0       0       0
   818 ;;      Temps:          3       0       0       0       0
   819 ;;      Totals:         3       0       0       0       0
   820 ;;Total ram usage:        3 bytes
   821 ;; Hardware stack levels used:    1
   822 ;; This function calls:
   823 ;;		Nothing
   824 ;; This function is called by:
   825 ;;		Interrupt level 1
   826 ;; This function uses a non-reentrant model
   827 ;;
   828                           
   829                           
   830                           ;psect for function _isr
   831  0043                     _isr:
   832  0043                     i1l747:
   833                           
   834                           ;Main.c: 41:     if (PIR1bits.ADIF) {
   835  0043  1283               	bcf	3,5	;RP0=0, select bank0
   836  0044  1303               	bcf	3,6	;RP1=0, select bank0
   837  0045  1F0C               	btfss	12,6	;volatile
   838  0046  2848               	goto	u3_21
   839  0047  2849               	goto	u3_20
   840  0048                     u3_21:
   841  0048  284E               	goto	i1l753
   842  0049                     u3_20:
   843  0049                     i1l749:
   844                           
   845                           ;Main.c: 42:         PIR1bits.ADIF = 0;
   846  0049  130C               	bcf	12,6	;volatile
   847  004A                     i1l751:
   848                           
   849                           ;Main.c: 43:         Data_ADC = ADRESH;
   850  004A  081E               	movf	30,w	;volatile
   851  004B  00F0               	movwf	??_isr
   852  004C  0870               	movf	??_isr,w
   853  004D  00F8               	movwf	_Data_ADC
   854  004E                     i1l753:
   855                           
   856                           ;Main.c: 46:     if (SSPIF == 1) {
   857  004E  1D8C               	btfss	12,3	;volatile
   858  004F  2851               	goto	u4_21
   859  0050  2852               	goto	u4_20
   860  0051                     u4_21:
   861  0051  2857               	goto	i1l49
   862  0052                     u4_20:
   863  0052                     i1l755:
   864                           
   865                           ;Main.c: 47:         Test = SSPBUF;
   866  0052  0813               	movf	19,w	;volatile
   867  0053  00F0               	movwf	??_isr
   868  0054  0870               	movf	??_isr,w
   869  0055  00F7               	movwf	_Test
   870  0056                     i1l757:
   871                           
   872                           ;Main.c: 48:         SSPIF = 0;
   873  0056  118C               	bcf	12,3	;volatile
   874  0057                     i1l49:
   875  0057  0872               	movf	??_isr+2,w
   876  0058  008A               	movwf	10
   877  0059  0E71               	swapf	??_isr+1,w
   878  005A  0083               	movwf	3
   879  005B  0EFE               	swapf	btemp,f
   880  005C  0E7E               	swapf	btemp,w
   881  005D  0009               	retfie
   882  005E                     __end_of_isr:
   883  007E                     btemp	set	126	;btemp
   884  007E                     wtemp0	set	126
   885                           
   886                           	psect	intentry
   887  0004                     __pintentry:	
   888                           ;incstack = 0
   889                           ; Regs used in _isr: [wreg]
   890                           
   891  0004                     interrupt_function:
   892  007E                     saved_w	set	btemp
   893  0004  00FE               	movwf	btemp
   894  0005  0E03               	swapf	3,w
   895  0006  00F1               	movwf	??_isr+1
   896  0007  080A               	movf	10,w
   897  0008  00F2               	movwf	??_isr+2
   898  0009  120A  118A  2843   	ljmp	_isr
   899                           
   900                           	psect	config
   901                           
   902                           ;Config register CONFIG1 @ 0x2007
   903                           ;	Oscillator Selection bits
   904                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
   905                           ;	Watchdog Timer Enable bit
   906                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   907                           ;	Power-up Timer Enable bit
   908                           ;	PWRTE = OFF, PWRT disabled
   909                           ;	RE3/MCLR pin function select bit
   910                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   911                           ;	Code Protection bit
   912                           ;	CP = OFF, Program memory code protection is disabled
   913                           ;	Data Code Protection bit
   914                           ;	CPD = OFF, Data memory code protection is disabled
   915                           ;	Brown Out Reset Selection bits
   916                           ;	BOREN = OFF, BOR disabled
   917                           ;	Internal External Switchover bit
   918                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   919                           ;	Fail-Safe Clock Monitor Enabled bit
   920                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   921                           ;	Low Voltage Programming Enable bit
   922                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   923                           ;	In-Circuit Debugger Mode bit
   924                           ;	DEBUG = 0x1, unprogrammed default
   925  2007                     	org	8199
   926  2007  20D4               	dw	8404
   927                           
   928                           ;Config register CONFIG2 @ 0x2008
   929                           ;	Brown-out Reset Selection bit
   930                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   931                           ;	Flash Program Memory Self Write Enable bits
   932                           ;	WRT = OFF, Write protection off
   933  2008                     	org	8200
   934  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7       9
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _setup->_spiInit

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     360
                           _ADC_Read
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     360
                         _config_adc
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              3 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (2) _config_adc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_Read                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Read
   _setup
     _config_adc
     _spiInit

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       9       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       9      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Feb 22 20:40:34 2021

                     l52 0042                       l63 00A3                       l67 0099  
                     u20 008E                       u21 008D                       u50 0066  
                     u51 0065                      l165 006E                      l166 0073  
                    l803 0074                      l805 0079                      l743 0088  
                    l745 008E                      l771 006D                      l763 005F  
                    l693 009A                      l765 0066                      l781 0020  
                    l773 0015                      l695 009E                      l767 0068  
                    l791 0035                      l783 0021                      l775 0019  
                    l697 00A1                      l769 006A                      l793 0036  
                    l785 0026                      l777 001A                      l699 00A2  
                    l795 0039                      l787 002B                      l779 001F  
                    l797 003C                      l789 0034                      l799 003F  
                    _isr 0043                     ?_isr 0070                     i1l49 0057  
                   u3_20 0049                     u3_21 0048                     u4_20 0052  
                   u4_21 0051                     _Test 0077                     _main 0074  
                   btemp 007E         __end_of_ADC_Read 009A                     start 000C  
                  ??_isr 0070                    ?_main 0070                    _ANSEL 0188  
                  i1l751 004A                    i1l753 004E                    i1l755 0052  
                  i1l747 0043                    i1l757 0056                    i1l749 0049  
                  _PORTA 0005                    _PORTB 0006                    _TRISA 0085  
                  _TRISB 0086                    _SSPIF 0063                    _setup 0015  
                  pclath 000A          __end_of_spiInit 0074                    status 0003  
                  wtemp0 007E          __initialization 000F             __end_of_main 0088  
                 ??_main 0077                   _ADCON0 001F                   _ADRESH 001E  
                 ?_setup 0070                   _ANSELH 0189                   _TRISC3 043B  
                 _TRISC5 043D                   _SSPBUF 0013                   _SSPCON 0014  
              ?_ADC_Read 0070                   saved_w 007E                ??_spiInit 0076  
__end_of__initialization 0011           __pcstackCOMMON 0070            __end_of_setup 0043  
             ??_ADC_Read 0073                  ??_setup 0077               __pmaintext 0074  
             __pintentry 0004               _config_adc 009A                  _SSPSTAT 0094  
                __ptext1 0015                  __ptext2 005E                  __ptext3 009A  
                __ptext4 0088                  __ptext5 0043             __size_of_isr 001B  
                _spiInit 005E     end_of_initialization 0011              ?_config_adc 0070  
              _TRISCbits 0087        __size_of_ADC_Read 0012      start_initialization 000F  
            __end_of_isr 005E      __size_of_config_adc 000A              __pbssCOMMON 0077  
              ___latbits 0002                 _ADC_Read 0088                 ?_spiInit 0073  
         __size_of_setup 002E     spiInit@sTransmitEdge 0075        interrupt_function 0004  
               _PIE1bits 008C       spiInit@sDataSample 0073                 _PIR1bits 000C  
             _ADCON0bits 001F               _ADCON1bits 009F                 _Data_ADC 0078  
           ??_config_adc 0073       __end_of_config_adc 00A4         __size_of_spiInit 0016  
          __size_of_main 0014             spiInit@sType 0076        spiInit@sClockIdle 0074  
             _INTCONbits 000B                 intlevel1 0000  
