

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Feb 22 20:40:39 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	intentry,global,class=CODE,delta=2
    12                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    13                           	dabs	1,0x7E,2
    14  0000                     
    15                           ; Version 2.20
    16                           ; Generated 12/02/2020 GMT
    17                           ; 
    18                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F887 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  0007                     	;# 
    57  0008                     	;# 
    58  0009                     	;# 
    59  000A                     	;# 
    60  000B                     	;# 
    61  000C                     	;# 
    62  000D                     	;# 
    63  000E                     	;# 
    64  000E                     	;# 
    65  000F                     	;# 
    66  0010                     	;# 
    67  0011                     	;# 
    68  0012                     	;# 
    69  0013                     	;# 
    70  0014                     	;# 
    71  0015                     	;# 
    72  0015                     	;# 
    73  0016                     	;# 
    74  0017                     	;# 
    75  0018                     	;# 
    76  0019                     	;# 
    77  001A                     	;# 
    78  001B                     	;# 
    79  001B                     	;# 
    80  001C                     	;# 
    81  001D                     	;# 
    82  001E                     	;# 
    83  001F                     	;# 
    84  0081                     	;# 
    85  0085                     	;# 
    86  0086                     	;# 
    87  0087                     	;# 
    88  0088                     	;# 
    89  0089                     	;# 
    90  008C                     	;# 
    91  008D                     	;# 
    92  008E                     	;# 
    93  008F                     	;# 
    94  0090                     	;# 
    95  0091                     	;# 
    96  0092                     	;# 
    97  0093                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0094                     	;# 
   101  0095                     	;# 
   102  0096                     	;# 
   103  0097                     	;# 
   104  0098                     	;# 
   105  0099                     	;# 
   106  009A                     	;# 
   107  009B                     	;# 
   108  009C                     	;# 
   109  009D                     	;# 
   110  009E                     	;# 
   111  009F                     	;# 
   112  0105                     	;# 
   113  0107                     	;# 
   114  0108                     	;# 
   115  0109                     	;# 
   116  010C                     	;# 
   117  010C                     	;# 
   118  010D                     	;# 
   119  010E                     	;# 
   120  010F                     	;# 
   121  0185                     	;# 
   122  0187                     	;# 
   123  0188                     	;# 
   124  0189                     	;# 
   125  018C                     	;# 
   126  018D                     	;# 
   127  0000                     	;# 
   128  0001                     	;# 
   129  0002                     	;# 
   130  0003                     	;# 
   131  0004                     	;# 
   132  0005                     	;# 
   133  0006                     	;# 
   134  0007                     	;# 
   135  0008                     	;# 
   136  0009                     	;# 
   137  000A                     	;# 
   138  000B                     	;# 
   139  000C                     	;# 
   140  000D                     	;# 
   141  000E                     	;# 
   142  000E                     	;# 
   143  000F                     	;# 
   144  0010                     	;# 
   145  0011                     	;# 
   146  0012                     	;# 
   147  0013                     	;# 
   148  0014                     	;# 
   149  0015                     	;# 
   150  0015                     	;# 
   151  0016                     	;# 
   152  0017                     	;# 
   153  0018                     	;# 
   154  0019                     	;# 
   155  001A                     	;# 
   156  001B                     	;# 
   157  001B                     	;# 
   158  001C                     	;# 
   159  001D                     	;# 
   160  001E                     	;# 
   161  001F                     	;# 
   162  0081                     	;# 
   163  0085                     	;# 
   164  0086                     	;# 
   165  0087                     	;# 
   166  0088                     	;# 
   167  0089                     	;# 
   168  008C                     	;# 
   169  008D                     	;# 
   170  008E                     	;# 
   171  008F                     	;# 
   172  0090                     	;# 
   173  0091                     	;# 
   174  0092                     	;# 
   175  0093                     	;# 
   176  0093                     	;# 
   177  0093                     	;# 
   178  0094                     	;# 
   179  0095                     	;# 
   180  0096                     	;# 
   181  0097                     	;# 
   182  0098                     	;# 
   183  0099                     	;# 
   184  009A                     	;# 
   185  009B                     	;# 
   186  009C                     	;# 
   187  009D                     	;# 
   188  009E                     	;# 
   189  009F                     	;# 
   190  0105                     	;# 
   191  0107                     	;# 
   192  0108                     	;# 
   193  0109                     	;# 
   194  010C                     	;# 
   195  010C                     	;# 
   196  010D                     	;# 
   197  010E                     	;# 
   198  010F                     	;# 
   199  0185                     	;# 
   200  0187                     	;# 
   201  0188                     	;# 
   202  0189                     	;# 
   203  018C                     	;# 
   204  018D                     	;# 
   205  0000                     	;# 
   206  0001                     	;# 
   207  0002                     	;# 
   208  0003                     	;# 
   209  0004                     	;# 
   210  0005                     	;# 
   211  0006                     	;# 
   212  0007                     	;# 
   213  0008                     	;# 
   214  0009                     	;# 
   215  000A                     	;# 
   216  000B                     	;# 
   217  000C                     	;# 
   218  000D                     	;# 
   219  000E                     	;# 
   220  000E                     	;# 
   221  000F                     	;# 
   222  0010                     	;# 
   223  0011                     	;# 
   224  0012                     	;# 
   225  0013                     	;# 
   226  0014                     	;# 
   227  0015                     	;# 
   228  0015                     	;# 
   229  0016                     	;# 
   230  0017                     	;# 
   231  0018                     	;# 
   232  0019                     	;# 
   233  001A                     	;# 
   234  001B                     	;# 
   235  001B                     	;# 
   236  001C                     	;# 
   237  001D                     	;# 
   238  001E                     	;# 
   239  001F                     	;# 
   240  0081                     	;# 
   241  0085                     	;# 
   242  0086                     	;# 
   243  0087                     	;# 
   244  0088                     	;# 
   245  0089                     	;# 
   246  008C                     	;# 
   247  008D                     	;# 
   248  008E                     	;# 
   249  008F                     	;# 
   250  0090                     	;# 
   251  0091                     	;# 
   252  0092                     	;# 
   253  0093                     	;# 
   254  0093                     	;# 
   255  0093                     	;# 
   256  0094                     	;# 
   257  0095                     	;# 
   258  0096                     	;# 
   259  0097                     	;# 
   260  0098                     	;# 
   261  0099                     	;# 
   262  009A                     	;# 
   263  009B                     	;# 
   264  009C                     	;# 
   265  009D                     	;# 
   266  009E                     	;# 
   267  009F                     	;# 
   268  0105                     	;# 
   269  0107                     	;# 
   270  0108                     	;# 
   271  0109                     	;# 
   272  010C                     	;# 
   273  010C                     	;# 
   274  010D                     	;# 
   275  010E                     	;# 
   276  010F                     	;# 
   277  0185                     	;# 
   278  0187                     	;# 
   279  0188                     	;# 
   280  0189                     	;# 
   281  018C                     	;# 
   282  018D                     	;# 
   283  0014                     _SSPCON	set	20
   284  0009                     _PORTE	set	9
   285  0005                     _PORTA	set	5
   286  0009                     _PORTEbits	set	9
   287  0006                     _PORTB	set	6
   288  0013                     _SSPBUF	set	19
   289  0063                     _SSPIF	set	99
   290  0094                     _SSPSTAT	set	148
   291  0089                     _TRISE	set	137
   292  0087                     _TRISCbits	set	135
   293  0086                     _TRISB	set	134
   294  0085                     _TRISA	set	133
   295  043B                     _TRISC3	set	1083
   296  043D                     _TRISC5	set	1085
   297  0189                     _ANSELH	set	393
   298  0188                     _ANSEL	set	392
   299                           
   300                           	psect	cinit
   301  000F                     start_initialization:	
   302                           ; #config settings
   303                           
   304  000F                     __initialization:
   305                           
   306                           ; Clear objects allocated to COMMON
   307  000F  01FA               	clrf	__pbssCOMMON& (0+127)
   308  0010                     end_of_initialization:	
   309                           ;End of C runtime variable initialization code
   310                           
   311  0010                     __end_of__initialization:
   312  0010  0183               	clrf	3
   313  0011  120A  118A  2814   	ljmp	_main	;jump to C main() function
   314                           
   315                           	psect	bssCOMMON
   316  007A                     __pbssCOMMON:
   317  007A                     _Test:
   318  007A                     	ds	1
   319                           
   320                           	psect	cstackCOMMON
   321  0070                     __pcstackCOMMON:
   322  0070                     ?_setup:
   323  0070                     ?_isr:	
   324                           ; 1 bytes @ 0x0
   325                           
   326  0070                     ??_isr:	
   327                           ; 1 bytes @ 0x0
   328                           
   329  0070                     ?_main:	
   330                           ; 1 bytes @ 0x0
   331                           
   332                           
   333                           ; 1 bytes @ 0x0
   334  0070                     	ds	3
   335  0073                     ?_spiInit:
   336  0073                     spiInit@sDataSample:	
   337                           ; 1 bytes @ 0x3
   338                           
   339                           
   340                           ; 1 bytes @ 0x3
   341  0073                     	ds	1
   342  0074                     spiInit@sClockIdle:
   343                           
   344                           ; 1 bytes @ 0x4
   345  0074                     	ds	1
   346  0075                     spiInit@sTransmitEdge:
   347                           
   348                           ; 1 bytes @ 0x5
   349  0075                     	ds	1
   350  0076                     ??_spiInit:
   351  0076                     spiInit@sType:	
   352                           ; 1 bytes @ 0x6
   353                           
   354                           
   355                           ; 1 bytes @ 0x6
   356  0076                     	ds	1
   357  0077                     ??_setup:
   358  0077                     ??_main:	
   359                           ; 1 bytes @ 0x7
   360                           
   361                           
   362                           ; 1 bytes @ 0x7
   363  0077                     	ds	3
   364                           
   365                           	psect	maintext
   366  0014                     __pmaintext:	
   367 ;;
   368 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   369 ;;
   370 ;; *************** function _main *****************
   371 ;; Defined at:
   372 ;;		line 43 in file "Main.c"
   373 ;; Parameters:    Size  Location     Type
   374 ;;		None
   375 ;; Auto vars:     Size  Location     Type
   376 ;;		None
   377 ;; Return value:  Size  Location     Type
   378 ;;                  1    wreg      void 
   379 ;; Registers used:
   380 ;;		wreg, status,2, status,0, pclath, cstack
   381 ;; Tracked objects:
   382 ;;		On entry : B00/0
   383 ;;		On exit  : 0/0
   384 ;;		Unchanged: 0/0
   385 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   386 ;;      Params:         0       0       0       0       0
   387 ;;      Locals:         0       0       0       0       0
   388 ;;      Temps:          3       0       0       0       0
   389 ;;      Totals:         3       0       0       0       0
   390 ;;Total ram usage:        3 bytes
   391 ;; Hardware stack levels required when called:    3
   392 ;; This function calls:
   393 ;;		_setup
   394 ;; This function is called by:
   395 ;;		Startup code after reset
   396 ;; This function uses a non-reentrant model
   397 ;;
   398                           
   399                           
   400                           ;psect for function _main
   401  0014                     _main:
   402  0014                     l758:	
   403                           ;incstack = 0
   404                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   405                           
   406                           
   407                           ;Main.c: 44:     setup();
   408  0014  120A  118A  203C  120A  118A  	fcall	_setup
   409  0019                     l760:
   410                           
   411                           ;Main.c: 46:         SSPBUF = PORTB;
   412  0019  1283               	bcf	3,5	;RP0=0, select bank0
   413  001A  1303               	bcf	3,6	;RP1=0, select bank0
   414  001B  0806               	movf	6,w	;volatile
   415  001C  0093               	movwf	19	;volatile
   416  001D                     l762:
   417                           
   418                           ;Main.c: 47:         if (PORTEbits.RE0 == 1) {
   419  001D  1C09               	btfss	9,0	;volatile
   420  001E  2820               	goto	u61
   421  001F  2821               	goto	u60
   422  0020                     u61:
   423  0020  2832               	goto	l44
   424  0021                     u60:
   425  0021                     l764:
   426                           
   427                           ;Main.c: 48:             PORTB++;
   428  0021  3001               	movlw	1
   429  0022  00F7               	movwf	??_main
   430  0023  0877               	movf	??_main,w
   431  0024  0786               	addwf	6,f	;volatile
   432  0025                     l766:
   433                           
   434                           ;Main.c: 49:             _delay((unsigned long)((275)*(4000000/4000.0)));
   435  0025  3002               	movlw	2
   436  0026  00F9               	movwf	??_main+2
   437  0027  3066               	movlw	102
   438  0028  00F8               	movwf	??_main+1
   439  0029  3021               	movlw	33
   440  002A  00F7               	movwf	??_main
   441  002B                     u87:
   442  002B  0BF7               	decfsz	??_main,f
   443  002C  282B               	goto	u87
   444  002D  0BF8               	decfsz	??_main+1,f
   445  002E  282B               	goto	u87
   446  002F  0BF9               	decfsz	??_main+2,f
   447  0030  282B               	goto	u87
   448                           
   449                           ;Main.c: 50:         } else if (PORTEbits.RE1 == 1) {
   450  0031  2819               	goto	l760
   451  0032                     l44:
   452  0032  1C89               	btfss	9,1	;volatile
   453  0033  2835               	goto	u71
   454  0034  2836               	goto	u70
   455  0035                     u71:
   456  0035  2819               	goto	l760
   457  0036                     u70:
   458  0036                     l768:
   459                           
   460                           ;Main.c: 51:             PORTB--;
   461  0036  3001               	movlw	1
   462  0037  0286               	subwf	6,f	;volatile
   463  0038  2825               	goto	l766
   464  0039  120A  118A  280C   	ljmp	start
   465  003C                     __end_of_main:
   466                           
   467                           	psect	text1
   468  003C                     __ptext1:	
   469 ;; *************** function _setup *****************
   470 ;; Defined at:
   471 ;;		line 57 in file "Main.c"
   472 ;; Parameters:    Size  Location     Type
   473 ;;		None
   474 ;; Auto vars:     Size  Location     Type
   475 ;;		None
   476 ;; Return value:  Size  Location     Type
   477 ;;                  1    wreg      void 
   478 ;; Registers used:
   479 ;;		wreg, status,2, status,0, pclath, cstack
   480 ;; Tracked objects:
   481 ;;		On entry : 0/0
   482 ;;		On exit  : 0/0
   483 ;;		Unchanged: 0/0
   484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   485 ;;      Params:         0       0       0       0       0
   486 ;;      Locals:         0       0       0       0       0
   487 ;;      Temps:          0       0       0       0       0
   488 ;;      Totals:         0       0       0       0       0
   489 ;;Total ram usage:        0 bytes
   490 ;; Hardware stack levels used:    1
   491 ;; Hardware stack levels required when called:    2
   492 ;; This function calls:
   493 ;;		_spiInit
   494 ;; This function is called by:
   495 ;;		_main
   496 ;; This function uses a non-reentrant model
   497 ;;
   498                           
   499                           
   500                           ;psect for function _setup
   501  003C                     _setup:
   502  003C                     l738:	
   503                           ;incstack = 0
   504                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   505                           
   506                           
   507                           ;Main.c: 58:     ANSEL = 0x00;
   508  003C  1683               	bsf	3,5	;RP0=1, select bank3
   509  003D  1703               	bsf	3,6	;RP1=1, select bank3
   510  003E  0188               	clrf	8	;volatile
   511                           
   512                           ;Main.c: 59:     ANSELH = 0x00;
   513  003F  0189               	clrf	9	;volatile
   514  0040                     l740:
   515                           
   516                           ;Main.c: 61:     TRISA = 0x20;
   517  0040  3020               	movlw	32
   518  0041  1683               	bsf	3,5	;RP0=1, select bank1
   519  0042  1303               	bcf	3,6	;RP1=0, select bank1
   520  0043  0085               	movwf	5	;volatile
   521  0044                     l742:
   522                           
   523                           ;Main.c: 62:     TRISB = 0x00;
   524  0044  0186               	clrf	6	;volatile
   525  0045                     l744:
   526                           
   527                           ;Main.c: 63:     TRISCbits.TRISC3 = 1;
   528  0045  1587               	bsf	7,3	;volatile
   529  0046                     l746:
   530                           
   531                           ;Main.c: 64:     TRISCbits.TRISC4 = 1;
   532  0046  1607               	bsf	7,4	;volatile
   533  0047                     l748:
   534                           
   535                           ;Main.c: 65:     TRISCbits.TRISC5 = 0;
   536  0047  1287               	bcf	7,5	;volatile
   537                           
   538                           ;Main.c: 66:     TRISE = 0x03;
   539  0048  3003               	movlw	3
   540  0049  0089               	movwf	9	;volatile
   541  004A                     l750:
   542                           
   543                           ;Main.c: 68:     PORTA = 0x00;
   544  004A  1283               	bcf	3,5	;RP0=0, select bank0
   545  004B  1303               	bcf	3,6	;RP1=0, select bank0
   546  004C  0185               	clrf	5	;volatile
   547  004D                     l752:
   548                           
   549                           ;Main.c: 69:     PORTB = 0x00;
   550  004D  0186               	clrf	6	;volatile
   551  004E                     l754:
   552                           
   553                           ;Main.c: 70:     PORTE = 0x00;
   554  004E  0189               	clrf	9	;volatile
   555  004F                     l756:
   556                           
   557                           ;Main.c: 71:     spiInit(SPI_SLAVE_SS_EN, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LOW, SP
      +                          I_IDLE_2_ACTIVE);
   558  004F  01F3               	clrf	spiInit@sDataSample
   559  0050  01F4               	clrf	spiInit@sClockIdle
   560  0051  01F5               	clrf	spiInit@sTransmitEdge
   561  0052  3024               	movlw	36
   562  0053  120A  118A  2059  120A  118A  	fcall	_spiInit
   563  0058                     l52:
   564  0058  0008               	return
   565  0059                     __end_of_setup:
   566                           
   567                           	psect	text2
   568  0059                     __ptext2:	
   569 ;; *************** function _spiInit *****************
   570 ;; Defined at:
   571 ;;		line 12 in file "spi.c"
   572 ;; Parameters:    Size  Location     Type
   573 ;;  sType           1    wreg     enum E1264
   574 ;;  sDataSample     1    3[COMMON] enum E1272
   575 ;;  sClockIdle      1    4[COMMON] enum E1276
   576 ;;  sTransmitEdg    1    5[COMMON] enum E1280
   577 ;; Auto vars:     Size  Location     Type
   578 ;;  sType           1    6[COMMON] enum E1264
   579 ;; Return value:  Size  Location     Type
   580 ;;                  1    wreg      void 
   581 ;; Registers used:
   582 ;;		wreg, status,2, status,0
   583 ;; Tracked objects:
   584 ;;		On entry : 0/0
   585 ;;		On exit  : 0/0
   586 ;;		Unchanged: 0/0
   587 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   588 ;;      Params:         3       0       0       0       0
   589 ;;      Locals:         1       0       0       0       0
   590 ;;      Temps:          0       0       0       0       0
   591 ;;      Totals:         4       0       0       0       0
   592 ;;Total ram usage:        4 bytes
   593 ;; Hardware stack levels used:    1
   594 ;; Hardware stack levels required when called:    1
   595 ;; This function calls:
   596 ;;		Nothing
   597 ;; This function is called by:
   598 ;;		_setup
   599 ;; This function uses a non-reentrant model
   600 ;;
   601                           
   602                           
   603                           ;psect for function _spiInit
   604  0059                     _spiInit:
   605                           
   606                           ;incstack = 0
   607                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   608                           ;spiInit@sType stored from wreg
   609  0059  00F6               	movwf	spiInit@sType
   610  005A                     l728:
   611                           
   612                           ;spi.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);spi.c: 13: {;spi.c: 14:     TRISC5 = 0;
   613  005A  1683               	bsf	3,5	;RP0=1, select bank1
   614  005B  1303               	bcf	3,6	;RP1=0, select bank1
   615  005C  1287               	bcf	7,5	;volatile
   616                           
   617                           ;spi.c: 15:     if(sType & 0b00000100)
   618  005D  1D76               	btfss	spiInit@sType,2
   619  005E  2860               	goto	u51
   620  005F  2861               	goto	u50
   621  0060                     u51:
   622  0060  2865               	goto	l734
   623  0061                     u50:
   624  0061                     l730:
   625                           
   626                           ;spi.c: 16:     {;spi.c: 17:         SSPSTAT = sTransmitEdge;
   627  0061  0875               	movf	spiInit@sTransmitEdge,w
   628  0062  0094               	movwf	20	;volatile
   629  0063                     l732:
   630                           
   631                           ;spi.c: 18:         TRISC3 = 1;
   632  0063  1587               	bsf	7,3	;volatile
   633                           
   634                           ;spi.c: 19:     }
   635  0064  2869               	goto	l150
   636  0065                     l734:
   637                           
   638                           ;spi.c: 21:     {;spi.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
   639  0065  0873               	movf	spiInit@sDataSample,w
   640  0066  0475               	iorwf	spiInit@sTransmitEdge,w
   641  0067  0094               	movwf	20	;volatile
   642  0068                     l736:
   643                           
   644                           ;spi.c: 23:         TRISC3 = 0;
   645  0068  1187               	bcf	7,3	;volatile
   646  0069                     l150:	
   647                           ;spi.c: 24:     }
   648                           
   649                           
   650                           ;spi.c: 26:     SSPCON = sType | sClockIdle;
   651  0069  0876               	movf	spiInit@sType,w
   652  006A  0474               	iorwf	spiInit@sClockIdle,w
   653  006B  1283               	bcf	3,5	;RP0=0, select bank0
   654  006C  1303               	bcf	3,6	;RP1=0, select bank0
   655  006D  0094               	movwf	20	;volatile
   656  006E                     l151:
   657  006E  0008               	return
   658  006F                     __end_of_spiInit:
   659                           
   660                           	psect	text3
   661  006F                     __ptext3:	
   662 ;; *************** function _isr *****************
   663 ;; Defined at:
   664 ;;		line 36 in file "Main.c"
   665 ;; Parameters:    Size  Location     Type
   666 ;;		None
   667 ;; Auto vars:     Size  Location     Type
   668 ;;		None
   669 ;; Return value:  Size  Location     Type
   670 ;;                  1    wreg      void 
   671 ;; Registers used:
   672 ;;		wreg
   673 ;; Tracked objects:
   674 ;;		On entry : 0/0
   675 ;;		On exit  : 0/0
   676 ;;		Unchanged: 0/0
   677 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   678 ;;      Params:         0       0       0       0       0
   679 ;;      Locals:         0       0       0       0       0
   680 ;;      Temps:          3       0       0       0       0
   681 ;;      Totals:         3       0       0       0       0
   682 ;;Total ram usage:        3 bytes
   683 ;; Hardware stack levels used:    1
   684 ;; This function calls:
   685 ;;		Nothing
   686 ;; This function is called by:
   687 ;;		Interrupt level 1
   688 ;; This function uses a non-reentrant model
   689 ;;
   690                           
   691                           
   692                           ;psect for function _isr
   693  006F                     _isr:
   694  006F                     i1l708:
   695                           
   696                           ;Main.c: 37:     if (SSPIF == 1) {
   697  006F  1283               	bcf	3,5	;RP0=0, select bank0
   698  0070  1303               	bcf	3,6	;RP1=0, select bank0
   699  0071  1D8C               	btfss	12,3	;volatile
   700  0072  2874               	goto	u2_21
   701  0073  2875               	goto	u2_20
   702  0074                     u2_21:
   703  0074  287A               	goto	i1l38
   704  0075                     u2_20:
   705  0075                     i1l710:
   706                           
   707                           ;Main.c: 38:         Test = SSPBUF;
   708  0075  0813               	movf	19,w	;volatile
   709  0076  00F0               	movwf	??_isr
   710  0077  0870               	movf	??_isr,w
   711  0078  00FA               	movwf	_Test
   712  0079                     i1l712:
   713                           
   714                           ;Main.c: 39:         SSPIF = 0;
   715  0079  118C               	bcf	12,3	;volatile
   716  007A                     i1l38:
   717  007A  0872               	movf	??_isr+2,w
   718  007B  008A               	movwf	10
   719  007C  0E71               	swapf	??_isr+1,w
   720  007D  0083               	movwf	3
   721  007E  0EFE               	swapf	btemp,f
   722  007F  0E7E               	swapf	btemp,w
   723  0080  0009               	retfie
   724  0081                     __end_of_isr:
   725  007E                     btemp	set	126	;btemp
   726  007E                     wtemp0	set	126
   727                           
   728                           	psect	intentry
   729  0004                     __pintentry:	
   730                           ;incstack = 0
   731                           ; Regs used in _isr: [wreg]
   732                           
   733  0004                     interrupt_function:
   734  007E                     saved_w	set	btemp
   735  0004  00FE               	movwf	btemp
   736  0005  0E03               	swapf	3,w
   737  0006  00F1               	movwf	??_isr+1
   738  0007  080A               	movf	10,w
   739  0008  00F2               	movwf	??_isr+2
   740  0009  120A  118A  286F   	ljmp	_isr
   741                           
   742                           	psect	config
   743                           
   744                           ;Config register CONFIG1 @ 0x2007
   745                           ;	Oscillator Selection bits
   746                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
   747                           ;	Watchdog Timer Enable bit
   748                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   749                           ;	Power-up Timer Enable bit
   750                           ;	PWRTE = OFF, PWRT disabled
   751                           ;	RE3/MCLR pin function select bit
   752                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   753                           ;	Code Protection bit
   754                           ;	CP = OFF, Program memory code protection is disabled
   755                           ;	Data Code Protection bit
   756                           ;	CPD = OFF, Data memory code protection is disabled
   757                           ;	Brown Out Reset Selection bits
   758                           ;	BOREN = OFF, BOR disabled
   759                           ;	Internal External Switchover bit
   760                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   761                           ;	Fail-Safe Clock Monitor Enabled bit
   762                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   763                           ;	Low Voltage Programming Enable bit
   764                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   765                           ;	In-Circuit Debugger Mode bit
   766                           ;	DEBUG = 0x1, unprogrammed default
   767  2007                     	org	8199
   768  2007  20D4               	dw	8404
   769                           
   770                           ;Config register CONFIG2 @ 0x2008
   771                           ;	Brown-out Reset Selection bit
   772                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   773                           ;	Flash Program Memory Self Write Enable bits
   774                           ;	WRT = OFF, Write protection off
   775  2008                     	org	8200
   776  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      11
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _setup->_spiInit

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     360
                                              7 COMMON     3     3      0
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     360
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              3 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup
     _spiInit

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       B       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       B      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Feb 22 20:40:39 2021

                     l52 0058                       l44 0032                       u50 0061  
                     u51 0060                       u60 0021                       u61 0020  
                     u70 0036                       u71 0035                       u87 002B  
                    l150 0069                      l151 006E                      l730 0061  
                    l732 0063                      l740 0040                      l734 0065  
                    l750 004A                      l742 0044                      l736 0068  
                    l728 005A                      l752 004D                      l744 0045  
                    l760 0019                      l754 004E                      l746 0046  
                    l738 003C                      l762 001D                      l756 004F  
                    l748 0047                      l764 0021                      l766 0025  
                    l758 0014                      l768 0036                      _isr 006F  
                   ?_isr 0070                     i1l38 007A                     u2_20 0075  
                   u2_21 0074                     _Test 007A                     _main 0014  
                   btemp 007E                     start 000C                    ??_isr 0070  
                  ?_main 0070                    _ANSEL 0188                    i1l710 0075  
                  i1l712 0079                    i1l708 006F                    _PORTA 0005  
                  _PORTB 0006                    _PORTE 0009                    _TRISA 0085  
                  _TRISB 0086                    _TRISE 0089                    _SSPIF 0063  
                  _setup 003C                    pclath 000A          __end_of_spiInit 006F  
                  status 0003                    wtemp0 007E          __initialization 000F  
           __end_of_main 003C                   ??_main 0077                   ?_setup 0070  
                 _ANSELH 0189                   _TRISC3 043B                   _TRISC5 043D  
                 _SSPBUF 0013                   _SSPCON 0014                   saved_w 007E  
              ??_spiInit 0076  __end_of__initialization 0010           __pcstackCOMMON 0070  
          __end_of_setup 0059                  ??_setup 0077               __pmaintext 0014  
             __pintentry 0004                  _SSPSTAT 0094                  __ptext1 003C  
                __ptext2 0059                  __ptext3 006F             __size_of_isr 0012  
                _spiInit 0059     end_of_initialization 0010                _PORTEbits 0009  
              _TRISCbits 0087      start_initialization 000F              __end_of_isr 0081  
            __pbssCOMMON 007A                ___latbits 0002                 ?_spiInit 0073  
         __size_of_setup 001D     spiInit@sTransmitEdge 0075        interrupt_function 0004  
     spiInit@sDataSample 0073         __size_of_spiInit 0016            __size_of_main 0028  
           spiInit@sType 0076        spiInit@sClockIdle 0074                 intlevel1 0000  
